extends layout
block content
    script(type='text/javascript').
      $(document).ready(function() {

        var startPos;
        var workPos = {latitude:49.44843, longitude:11.09182};
        var homePos = {latitude:49.51414, longitude:10.87549};
      
        if (navigator.geolocation) {
            
            navigator.geolocation.getCurrentPosition(function(position) {
                startPos = position;
                $('#startLat').text(startPos.coords.latitude);
                $('#startLon').text(startPos.coords.longitude)
            }, function(error) {
                alert("Error occurred. Error code: " + error.code);
                // error.code can be:
                //   0: unknown error
                //   1: permission denied
                //   2: position unavailable (error response from locaton provider)
                //   3: timed out
            });
      
            navigator.geolocation.watchPosition(function(position) {
                $('#currentLat').text(position.coords.latitude);
                $('#currentLon').text(position.coords.longitude);

                var dist = formatDistance(calculateDistance(startPos.coords.latitude, startPos.coords.longitude, position.coords.latitude, position.coords.longitude));
                $('#distanceKm').text(dist.kilometer);
                $('#distanceM').text(dist.meter);
                
                var distWork = formatDistance(calculateDistance(workPos.latitude, workPos.longitude, position.coords.latitude, position.coords.longitude));
                $('#distanceWorkKm').text(distWork.kilometer);
                $('#distanceWorkM').text(distWork.meter);

                var distHome = formatDistance(calculateDistance(homePos.latitude, homePos.longitude, position.coords.latitude, position.coords.longitude));
                $('#distanceHomeKm').text(distHome.kilometer);
                $('#distanceHomeM').text(distHome.meter);
            });
          }


          // Reused code - copyright Moveable Type Scripts - retrieved May 4, 2010.
          // http://www.movable-type.co.uk/scripts/latlong.html
          // Under Creative Commons License http://creativecommons.org/licenses/by/3.0/
          function calculateDistance(lat1, lon1, lat2, lon2) {
              var R = 6371; // km -> m
              var dLat = (lat2-lat1).toRad();
              var dLon = (lon2-lon1).toRad();
              var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                    Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) *
                    Math.sin(dLon/2) * Math.sin(dLon/2);
              var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
              var d = R * c;
              return d;
          }

          function formatDistance(distOrig) {
              var distKm = parseInt(distOrig);
              var distM = (distOrig - distKm) * 1000;
              distM = Math.round(distM * 100) / 100;

              return {kilometer:distKm, meter:distM};
          }
          Number.prototype.toRad = function() {
              return this * Math.PI / 180;
          }
        });

    #tripmeter
        p Starting Location (lat, lon) &nbsp;
            span#startLat ---
            | &deg;, &nbsp;
            span#startLon ---
            | &deg; &nbsp;

        p Current Location (lat, lon):&nbsp;
            span#currentLat ---
            | &deg;, &nbsp;
            span#currentLon ---
            | &deg;

        p Distance from starting location:&nbsp;
            span#distanceKm
            | km &nbsp;
            span#distanceM
            | m

        p Distance from work:&nbsp;
            span#distanceWorkKm
            | km &nbsp;
            span#distanceWorkM
            | m

        p Distance from home:&nbsp;
            span#distanceHomeKm
            | km &nbsp;
            span#distanceHomeM
            | m









